<?php
/**
 * QuoteReadTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Tripartie\SafeCheckout
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Safe Checkout
 *
 * Simple, yet elegant web interfaces for your convenience. One request away from your first secured C2C transaction.
 *
 * The version of the OpenAPI document: 2.0.38
 * Contact: noc@tripartie.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.8.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Tripartie\SafeCheckout\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * QuoteReadTest Class Doc Comment
 *
 * @category    Class
 * @description Someone has to ask for a Quote prior to create a transaction and (therefor) charging a known amount of money.
 * @package     Tripartie\SafeCheckout
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class QuoteReadTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "QuoteRead"
     */
    public function testQuoteRead()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ulid"
     */
    public function testPropertyUlid()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shippingCarrier"
     */
    public function testPropertyShippingCarrier()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pickupCode"
     */
    public function testPropertyPickupCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "quantityToBeAcquired"
     */
    public function testPropertyQuantityToBeAcquired()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "attemptUnitPrice"
     */
    public function testPropertyAttemptUnitPrice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "currency"
     */
    public function testPropertyCurrency()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "originalUnitPrice"
     */
    public function testPropertyOriginalUnitPrice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "originalUnitPriceUnconverted"
     */
    public function testPropertyOriginalUnitPriceUnconverted()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "transactionFees"
     */
    public function testPropertyTransactionFees()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shippingFees"
     */
    public function testPropertyShippingFees()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "thirdPartyRecipientFirstName"
     */
    public function testPropertyThirdPartyRecipientFirstName()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "thirdPartyRecipientLastName"
     */
    public function testPropertyThirdPartyRecipientLastName()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "thirdPartyRecipientAddress"
     */
    public function testPropertyThirdPartyRecipientAddress()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "createdAt"
     */
    public function testPropertyCreatedAt()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "expireAt"
     */
    public function testPropertyExpireAt()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "iri"
     */
    public function testPropertyIri()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "unitPrice"
     */
    public function testPropertyUnitPrice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "price"
     */
    public function testPropertyPrice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buyerTotal"
     */
    public function testPropertyBuyerTotal()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sellerTotal"
     */
    public function testPropertySellerTotal()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "exchangeRate"
     */
    public function testPropertyExchangeRate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
